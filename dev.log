2024-06-01
I did a first prototype cutting of Spirit Island big cards.
- There is still some sort of scaling issue: Inkscape assumes different scaling of svgs in millimeters.
- I changed the material thickness which seemed to result in erroneous spacer measurements.
- The layout part during lab time is annoying, and it might be worth my time to develop some sort
of bin packing algorithm implementation for the items.

2024-05-11
Removed the additional "last" spacer creation: The last slot ends with an Edge piece, not a spacer.
Note that now the cutting Stroke Width is hairline, .001 px which Inkscape treats as invisible until
you zoom really close. Quickest workaround for analysing the generated pieces is to Select All (Ctrl+A)
and then change the stroke width to 1 (Ctrl+Shift+F + Stroke Style + Width).

2023-12-24
Got finally back to this case: It looks like text elements are bit much work for now, so I intend
to leave it for later.
I found this guide for Epilog lasers cutting widths:
https://www.epiloglaser.com/assets/img/knowledge-base/tl-line-weights.htm
after reading Hutchisons commit with some amount of googling for svgwrite.
TabbedBoxMaker uses Inkscape plugin configuration files and I want to generate plain SVG files without
Inkscape dependency. Downside is that I only get to test if it works at the Laser Cutting machine.


2023-12-03
I am trying to add text elements to SVG, but I'm trying to keep away from the svgwrite API and stick
to the older text based svg configuration I use for line drawings.
I had a look at old logs and checked out the Paul Hutchisons https://github.com/paulh-rnd/TabbedBoxMaker/
repo. It looks that some years ago he had done work on the line style attribute which would enable
having etchable and cutting lines in the same file withot having to do manual work in setting line types.
"v0.93 - 15/8/2016 by Paul Hutchison:
 - Added Hairline option and fixed open box height bug"


2023-11-27
Added stone and small resources -tray to tray specification.
There is still some top edge generation problems: It seems that in some cases - here stones-and-precious tray -
the corner indentation depth is screwed up and gets sometimes either counted twice or possibly not at all -
leading to faulty positioning offset of the opposite edge that is generated as a horizontally mirrored edge.
Need to have a look at this next before continuing.

2023-11-27
Changed the spacer_indent_gaps function to just compute the vert spacer top edge including all spacer gaps
and the spaces between spacers so that it can be fed to generate_top_edge general function like edge lists.

It seems that the extra slot creation mentioned in 2023-09-18 may have been fixed in commit e213607040,
but I have forgotten to mention the fixed issue in my 2023-10 log entry.

Next up: Figure out and update the tray configuration for Caverna to have a proper slot for each resource.
I may have to leave out the card slot special feature out to complete at least one Caverna tray specification first.

2023-10-28
I renamed the source files to "tray" - anything that has to do with fiddling the slot layout and processing
the tray specification - and "svg" - everything that has to do with creating SVG paths from the fixed slot layout.

I went to cut first proto of the newly refactored svg generation code in Oodi on 2023-10-23 - see separate notes for
lessons learned there.

There is at least one issue remaining with the Caverna "Furnishing tiles" spacer generation: One slot indentation
is missing from the vertical spacer.


2023-09-18
Did a paper proto to get some sane starting values for Caverna animal meeple slots.
Measuring & calculating the outer bounding boxes is useful for starting, actually
building the physical slot with the components is much more assuring.

I had used a minimum height of 30 mm per tray, but the meeples work better with shallower trays.
Seems that the side toothing gets broken by that at the moment. Reduced tooth sizing to minimum of 8mm.

There is still a problem with additional slot getting created even with elastic slot sizing.


2023-09-10
Handling the unused column height is a non-trivial problem when spacers can span columns.
One solution might be to precompute available extra space for each slot, and then
use that available extra space to first adjust the almost matching spacers to combine them.


2023-09-08
I refactored the most of ht epath generation to use string arrays rather than creating the SVG objects
directly.
This allows better debugging and positioning of elements after first creating all of them, possibly also
using rotation and better packing algorithms. It also makes the path part computing functions more functional
when they do not mutate the inputs.

LESSON LEARNED: Paths must always have a absolute starting position set by "M x y"
- Spacers now support indents, but the last slot index handling is not quite clear.
- Unused column height handling is yet to be done.


2023-08-17
The tray outline indentations seem to work no - visual validation and laser cutting should be
done to check that measurements are correct.
Next up:
- The empty column height should be rather distributed to all slots that are allowed
to expand rather than adding an empty column slot which serves no purpose.
- The spacers should also support the indentation if either slot needs it and both sides allow it.
There is no configuration yet for forbidding indentation, that needs to be added.

2023-08-09
I have very little idea what I was doing last time I touched this - 2 years ago after the vacation,
before last years huge personal mess.
Right now I have Caverna pieces spread on the table and will try to create enough features
to generate simple trays for Caverna, leaving most fancy ideas for later.

I will want to have multi-tray configuration files to fill the material sheets without manual work.
At the moment the generator works and while I don't remember precisely how, it 
is still something I can build incrementally on.


2021-08-20
Gloomhaven monster card tray worked out fine with the dynamic generation.
There was a minor measurement error - probably kerf correction expanding the tab holes rather than making them smaller -
which cause the tray parts to connect too loosely so that glue was required.

Next up: Caverna trays, which need tray covers to prevent components getting loose in the boxes.
First part is to implement a lid with corner tabs, next part is to use same/similar corner tabs to
enable stackable trays which will function as "lids" for the lower trays.


2019-11-24
Turns out Inkscape viewer does not in fact us the specified viewBox but rather changes to viewbox
to pixel scale. mm to pixel scale is 0.26458

In inkscape 0.92 this can be corrected by setting File > Document Properties > Viewbox : Set the width
and height to the specified Custom Size. Paths should have the right scale then.


2018-08-21
Did first cuts with 3.5mm, the accumulating nature of hole
cutting broke when switched from 3 -> 3.5mm. Need to implement absolute
positioning of holes.

